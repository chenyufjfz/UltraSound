<session jtag_chain="" sof_file="">
  <display_tree gui_logging_enabled="0">
    <display_branch instance="auto_signaltap_0" signal_set="USE_GLOBAL_TEMP" trigger="USE_GLOBAL_TEMP"/>
  </display_tree>
  <instance entity_name="sld_signaltap" is_auto_node="yes" is_expanded="true" name="auto_signaltap_0" source_file="sld_signaltap.vhd">
    <node_ip_info instance_id="0" mfg_id="110" node_id="0" version="6"/>
    <position_info>
      <single attribute="active tab" value="1"/>
    </position_info>
    <signal_set global_temp="1" name="signal_set: 2019/07/18 16:27:22  #0">
      <clock name="controller:controller_inst|clk" polarity="posedge" tap_mode="classic"/>
      <config ram_type="M4K" reserved_data_nodes="0" reserved_storage_qualifier_nodes="0" reserved_trigger_nodes="0" sample_depth="1024" trigger_in_enable="no" trigger_out_enable="no"/>
      <top_entity/>
      <signal_vec>
        <trigger_input_vec>
          <wire name="controller:controller_inst|check_invalid" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_err" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_hdr_ready" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_hdr_ready~reg0" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|ctrl_in_udp_hdr_valid" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tlast" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tready~reg0" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_lo" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|ctrl_in_valid" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|ctrl_out_udp_hdr_ready" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_out_udp_hdr_valid" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_out_udp_hdr_valid~reg0" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|ctrl_out_udp_payload_axis_tvalid~reg0" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|ctrl_out_udp_payload_lo" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|execcmd:execcmd_inst|start_exec" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|udp_hdr_tx_finish" tap_mode="classic" type="register"/>
        </trigger_input_vec>
        <data_input_vec>
          <wire name="controller:controller_inst|check_invalid" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_err" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_hdr_ready" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_hdr_ready~reg0" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|ctrl_in_udp_hdr_valid" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tlast" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tready~reg0" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_lo" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|ctrl_in_valid" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|ctrl_out_udp_hdr_ready" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_out_udp_hdr_valid" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_out_udp_hdr_valid~reg0" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|ctrl_out_udp_payload_axis_tvalid~reg0" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|ctrl_out_udp_payload_lo" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|execcmd:execcmd_inst|start_exec" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|udp_hdr_tx_finish" tap_mode="classic" type="register"/>
        </data_input_vec>
        <storage_qualifier_input_vec>
          <wire name="controller:controller_inst|check_invalid" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_err" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_hdr_ready" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_hdr_ready~reg0" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|ctrl_in_udp_hdr_valid" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tlast" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_axis_tready~reg0" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|ctrl_in_udp_payload_lo" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|ctrl_in_valid" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|ctrl_out_udp_hdr_ready" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_out_udp_hdr_valid" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|ctrl_out_udp_hdr_valid~reg0" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|ctrl_out_udp_payload_axis_tvalid~reg0" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|ctrl_out_udp_payload_lo" tap_mode="classic" type="register"/>
          <wire name="controller:controller_inst|execcmd:execcmd_inst|start_exec" tap_mode="classic" type="combinatorial"/>
          <wire name="controller:controller_inst|udp_hdr_tx_finish" tap_mode="classic" type="register"/>
        </storage_qualifier_input_vec>
      </signal_vec>
      <presentation>
        <data_view>
          <net is_signal_inverted="no" name="controller:controller_inst|check_invalid"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_hdr_valid"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_hdr_ready"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_err"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_valid"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_out_udp_hdr_ready"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_out_udp_hdr_valid"/>
          <net is_signal_inverted="no" name="controller:controller_inst|udp_hdr_tx_finish"/>
          <net is_signal_inverted="no" name="controller:controller_inst|execcmd:execcmd_inst|start_exec"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tlast"/>
          <bus is_signal_inverted="no" link="all" name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[7]"/>
            <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[6]"/>
            <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[5]"/>
            <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[4]"/>
            <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[3]"/>
            <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[2]"/>
            <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[1]"/>
            <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[0]"/>
          </bus>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_out_udp_payload_axis_tvalid~reg0"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_out_udp_hdr_valid~reg0"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tready~reg0"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_hdr_ready~reg0"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_lo"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_out_udp_payload_lo"/>
        </data_view>
        <setup_view>
          <net is_signal_inverted="no" name="controller:controller_inst|check_invalid"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_hdr_valid"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_hdr_ready"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_err"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_valid"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_out_udp_hdr_ready"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_out_udp_hdr_valid"/>
          <net is_signal_inverted="no" name="controller:controller_inst|udp_hdr_tx_finish"/>
          <net is_signal_inverted="no" name="controller:controller_inst|execcmd:execcmd_inst|start_exec"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tlast"/>
          <bus is_signal_inverted="no" link="all" name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[7]"/>
            <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[6]"/>
            <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[5]"/>
            <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[4]"/>
            <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[3]"/>
            <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[2]"/>
            <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[1]"/>
            <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tdata[0]"/>
          </bus>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_out_udp_payload_axis_tvalid~reg0"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_out_udp_hdr_valid~reg0"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_axis_tready~reg0"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_hdr_ready~reg0"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_in_udp_payload_lo"/>
          <net is_signal_inverted="no" name="controller:controller_inst|ctrl_out_udp_payload_lo"/>
        </setup_view>
      </presentation>
      <trigger attribute_mem_mode="false" gap_record="true" global_temp="1" name="trigger: 2019/07/18 16:27:22  #1" position="pre" power_up_trigger_mode="false" record_data_gap="true" segment_size="256" storage_mode="off" storage_qualifier_disabled="no" storage_qualifier_port_is_pin="false" storage_qualifier_port_name="auto_stp_external_storage_qualifier" storage_qualifier_port_tap_mode="classic" trigger_in="dont_care" trigger_out="active high" trigger_type="circular">
        <power_up_trigger position="pre" storage_qualifier_disabled="no" trigger_in="dont_care" trigger_out="active high"/>
        <events use_custom_flow_control="no">
          <level enabled="yes" name="condition1" type="basic">'controller:controller_inst|ctrl_in_udp_hdr_valid' == rising edge
            <power_up enabled="yes">
            </power_up>
            <op_node/>
          </level>
        </events>
        <storage_qualifier_events>
          <transitional>000000000000000000000000
            <pwr_up_transitional>000000000000000000000000</pwr_up_transitional>
          </transitional>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
        </storage_qualifier_events>
      </trigger>
    </signal_set>
  </instance>
  <mnemonics/>
  <global_info>
    <single attribute="active instance" value="0"/>
    <single attribute="config widget visible" value="1"/>
    <single attribute="data log widget visible" value="1"/>
    <single attribute="hierarchy widget visible" value="1"/>
    <single attribute="instance widget visible" value="1"/>
    <single attribute="jtag widget visible" value="1"/>
    <multi attribute="column width" size="23" value="34,34,359,74,68,70,88,88,98,98,88,88,110,101,101,101,101,101,101,101,101,107,78"/>
    <multi attribute="frame size" size="2" value="1920,1001"/>
    <multi attribute="jtag widget size" size="2" value="351,139"/>
  </global_info>
</session>
